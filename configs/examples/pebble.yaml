# Example Config that uses almost all values

alg: PEBBLE
alg_kwargs:
  tau: 0.005
  init_temperature: 0.1
  critic_freq: 1
  actor_freq: 1
  target_freq: 2
  init_steps: 5000
  reward_freq: 5000
  reward_epochs: 200
  max_feedback: 1400
  init_feedback_size: 128
  reward_batch_size: 128
  segment_size: 50
  feedback_sample_multiplier: 10
  feedback_replay_window: 100000

optim: Adam
optim_kwargs:
  lr: 0.0003

network: ActorCriticRewardPolicy
network_kwargs:
  actor_class: DiagonalGaussianMLPActor
  actor_kwargs:
    hidden_layers: [1024, 1024]
    log_std_bounds: [-5, 2]
    ortho_init: true
  critic_class: ContinuousMLPCritic
  critic_kwargs:
    hidden_layers: [1024, 1024]
    num_q_fns: 2
    ortho_init: true
  reward_class: RewardEnsemble
  reward_kwargs:
    ensemble_size: 3
    output_act: ["import", "torch.nn", "Tanh"]

batch_size: 1024
collate_fn: null # The collate function passed to the dataloader. None uses pytorch default.
checkpoint: null # A checkpoint to initialize the network from.

env: WalkerWalk-v0

dataset: ReplayBuffer
dataset_kwargs:
  discount: 0.99
  nstep: 1
  capacity: 1000000
  fetch_every: 1000

processor: null

train_kwargs: # Arguments given to Algorithm.train
  total_steps: 1000000 # The total number of steps to train
  log_freq: 250 # How often to log values
  eval_freq: 10000 # How often to run evals
  max_eval_steps: 50 # Maximum number of steps from the validatoin dataset, if included
  eval_ep: 10 # Number of enviornment episodes to run for evaluation, or -1 if none should be run.
  loss_metric: reward # The validation metric that determines when to save the "best_checkpoint"
  workers: 4 # Number of dataloader workers.

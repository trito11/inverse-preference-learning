# Example Config that uses almost all values

alg: FewShotPEBBLE
alg_kwargs:
  tau: 0.005
  init_temperature: 0.1
  critic_freq: 1
  actor_freq: 1
  target_freq: 2
  init_steps: 10000
  reward_freq: 10000
  reward_epochs: 0.95
  max_feedback: 100
  init_feedback_size: 10
  reward_batch_size: 256

  segment_size: 25
  feedback_schedule: constant
  feedback_sample_multiplier: 10


  reward_optim: ["import", "torch.optim", "Adam"]
  reward_optim_kwargs:
    lr: 0.0003
  reset_reward_net: true
  offline_dataset_path: null
  reward_scale: 1
  reward_shift: 0
  human_feedback: true
  num_uniform_feedback: 75

optim: Adam
optim_kwargs:
  lr: 0.0003

network: ActorCriticRewardPolicy
network_kwargs:
  actor_class: DiagonalGaussianMLPActor
  actor_kwargs:
    hidden_layers: [256, 256, 256]
    log_std_bounds: [-5, 2]
    ortho_init: true
  critic_class: ContinuousMLPCritic
  critic_kwargs:
    hidden_layers: [256, 256, 256]
    ensemble_size: 2
    ortho_init: true
  reward_class: MetaRewardMLPEnsemble
  reward_kwargs:
    ensemble_size: 3
    hidden_layers: [256, 256, 256]
    act: ["import", "torch.nn.functional", "leaky_relu"]
    output_act: ["import", "torch.nn.functional", "tanh"]

batch_size: null
collate_fn: null
checkpoint: path/to/checkpoint/best_model.pt
seed: null

env: mw_door-close-v2

dataset: ReplayBuffer
dataset_kwargs:
  discount: 0.99
  nstep: 1
  capacity: 500000
  fetch_every: 500
  batch_size: 512

processor: null

train_kwargs: # Arguments given to Algorithm.train
  total_steps: 500000 # The total number of steps to train
  log_freq: 1000 # How often to log values
  eval_freq: 10000 # How often to run evals
  eval_fn: eval_policy
  eval_kwargs:
    num_ep: 15 # Number of enviornment episodes to run for evaluation
  loss_metric: reward # The validation metric that determines when to save the "best_checkpoint"
  workers: 0 # Number of dataloader workers.
  profile_freq: 1000
